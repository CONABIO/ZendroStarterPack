version: "3.2"

services:
  sp_postgres:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - bp_db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  sp_graphql:
    depends_on:
      - bp_postgres
    build:
      context: ./graphql-server
      dockerfile: Dockerfile.graphql_server
    ports:
      - 3000:3000
    environment:
      - PORT=3000
    volumes:
      - ./graphql-server:/usr/src/app
    # Await POSTGRES role and DB creation, migrate schema, then start web
    # server:
    command:
      - /bin/sh
      - -c
      - |
        npm install
        ./migrateDbAndStartServer.sh
  sp_spa:
    depends_on:
      - bp_postgres
      - bp_science_db_graphql_server
    build:
      context: ./single-page-app
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - PORT=8080
    volumes:
      - ./single-page-app:/usr/src/app
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm run dev
  sp_minio:
    image: minio/minio:RELEASE.2019-02-20T22-44-29Z
    volumes:
      - bp_minio_data:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data

  sp_shiny:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PORT: 3838
    ports:
      - "3838:3838"
    volumes:
      - ./shiny-data-dev:/srv/shiny-server
    #labels:
    #  traefik.enable: "true"
    #  traefik.backend: "science_db_shiny"
    #  traefik.frontend.rule: "Host:shiny.reconstructdb.org"
    #  #traefik.frontend.auth.basic: 'testuser:$$apr1$$QBCuO60R$$pJIFSe2x8L/cTbOBOvoOt1'
    #  traefik.docker.network: "reverseproxy"
    #  traefik.port: "3838"

volumes:
  bp_db_data:
  bp_minio_data:
  bp_shiny_data: