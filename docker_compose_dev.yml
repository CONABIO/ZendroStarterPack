version: "3.2"

services:
  sp_postgres:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    volumes:
      - ./volumes/pg_data:/var/lib/postgresql/data
    ports:
      - 1234:5432
#    command: /bin/sh -c top

  sp_graphql:
    depends_on:
      - sp_postgres
    build:
      context: .
      dockerfile: docker/graphql/Dockerfile
    ports:
      - 3000:3000
    environment:
      - PORT=3000
    command:
      - ./run_graphql.sh

  sp_spa:
    depends_on:
      - sp_postgres
      - sp_graphql
    build:
      context: .
      dockerfile: docker/spa/Dockerfile
    ports:
      - 8080:8080
    environment:
      - PORT=8080
    # debug this image
    #command: /bin/sh -c top
    command: /bin/sh -c "npm run dev"

  sp_minio:
    image: minio/minio:RELEASE.2019-02-20T22-44-29Z
    volumes:
      - ./volumes/pg_data:/data
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data

  #sp_shiny:
  #  build:
  #    context: .
  #    dockerfile: docker/shiny/Dockerfile
  #  environment:
  #    PORT: 3838
  #  ports:
  #    - 3838:3838
  #  volumes:
  #    - ./volumes/shiny_data:/srv/shiny-server
    #labels:
    #  traefik.enable: "true"
    #  traefik.backend: "science_db_shiny"
    #  traefik.frontend.rule: "Host:shiny.reconstructdb.org"
    #  #traefik.frontend.auth.basic: 'testuser:$$apr1$$QBCuO60R$$pJIFSe2x8L/cTbOBOvoOt1'
    #  traefik.docker.network: "reverseproxy"
    #  traefik.port: "3838"