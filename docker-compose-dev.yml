version: "3.7"

services:
  sdb_postgres:
    container_name: zendroStarterPack_postgres
    build:
      context: .
      dockerfile: Dockerfile.postgres
    volumes:
      - sdb_db_data:/var/lib/postgresql/data
    networks:
      - backend

  sdb_science_db_graphql_server:
    container_name: zendroStarterPack_graphql-server
    depends_on:
      - sdb_postgres
    build:
      context: ./graphql-server
      dockerfile: Dockerfile.graphql_server
    environment:
      - PORT: '3000'
      - LIMIT_RECORDS : "${LIMIT_RECORDS}"
      - ALLOW_ORIGIN: "${ALLOW_ORIGIN}"
      - REQUIRE_SIGN_IN: "${REQUIRE_SIGN_IN}"
      - MAX_TIME_OUT: "${MAX_TIME_OUT}"
      - POST_REQUEST_MAX_BODY_SIZE: "${POST_REQUEST_MAX_BODY_SIZE}"
      - ERROR_LOG: "${ERROR_LOG}"
      - MAIL_SERVICE: "${MAIL_SERVICE}" 
      - MAIL_HOST: "${MAIL_HOST}"
      - MAIL_ACCOUNT: "${MAIL_ACCOUNT}"
      - MAIL_PASSWORD: "${MAIL_PASSWORD}"
      - EXPORT_TIME_OUT: "${EXPORT_TIME_OUT}"
    volumes:
      - .:/usr/ScienceDbStarterPack
      # Use the Sequelize config adjusted for the Docker setup of ScienceDbStarterPack:
      - ./graphql-server/config/config_postgres_docker.json:/usr/ScienceDbStarterPack/graphql-server/config/config.json
    networks:
      - backend
    # Await POSTGRES role and DB creation, migrate schema, then start web
    # server:
    command:
      - /bin/sh
      - -c
      - |
        npm install
        ./migrateDbAndStartServer.sh

  sdb_science_db_app_server:
    container_name: zendroStarterPack_spa
    # Workaround. See https://github.com/facebook/create-react-app/issues/8688
    stdin_open: true
    depends_on:
      - sdb_postgres
      - sdb_science_db_graphql_server
    build:
      context: ./single-page-app
      dockerfile: Dockerfile.app
    environment:
      - PORT=8080
      - REACT_APP_CENZ_GRAPHQL_SERVER_URL=http://localhost:3000/graphql
      - REACT_APP_CENZ_LOGIN_URL=http://localhost:3000/login
      - REACT_APP_CENZ_EXPORT_URL=http://localhost:3000/export
      - REACT_APP_CENZ_MAX_UPLOAD_SIZE=500
    volumes:
      - .:/usr/ScienceDbStarterPack
    # Install dependencies and start single-page-app-server in development
    # mode.
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm run serve

  sdb_graphiql:
    container_name: zendroStarterPack_graphiql-auth
    depends_on:
      - sdb_postgres
      - sdb_science_db_graphql_server
    build:
      context: ./graphiql-auth
      dockerfile: Dockerfile
    environment:
      - REACT_APP_SERVER_URL=http://localhost:3000/graphql
      - REACT_APP_LOGIN_URL=http://localhost:3000/login
      - PORT=7000
    volumes:
      - .:/usr/ScienceDbStarterPack
    # Install dependencies and start single-page-app-server in development
    # mode.
    networks:
      - backend
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start
   

volumes:
  sdb_db_data:

networks:
  backend:
